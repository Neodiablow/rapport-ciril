input{ 
    stdin {}
} 


filter{
    grok{
        match => ["message", "%{SYSLOGTIMESTAMP:fakeTimestamp} %{IPORHOST:host} %{NUMBER:port}: %{SYSLOGTIMESTAMP:realTimestamp}: %{GREEDYDATA:autres} "]
        add_tag => ["cisco_error"]
#        remove_field => ["host"]
    }


#    grok{
#        match => ["message", "%{SYSLOGLINE:Chargeutile}"]
##        add_tag => ["Syslogline", "SyslogChargeUtile"]
##        remove_field => ["Syslogline"]
#    }
#    grok{
#        match => ["Chargeutile", "%{SYSLOGLINE:pomme}"]
#    }
}


#filter { 
#    grok {
#        match => { "message" => "%{SYSLOG5424PRI}%{NUMBER:sequence}: %{SYSLOGTIMESTAMP:log_timestamp}: \%SEC-6-IPACCESSLOGP: list %{INT:acl_number} %{WORD:action} %{WORD:protocol} %{IP:src_ip}\(%{NUMBER:src_port}\) \-\> %{IP:dst_ip}\(%{NUMBER:dst_port}\), %{INT:packets} packet" }
#        add_tag => ["grok_match", "cisco_acl_message"]
#        remove_field => [ "message" ]
#    }
#
#    if "_grokparsefailure" in [tags] {
#        grok {
#            match => { "message" => "%{SYSLOG5424LINE}" }
#            add_tag => ["grok_match", "cisco_message", "replace_message"]
#            remove_tag => [ "_grokparsefailure" ]
#        }
#    }
#                                            
#}

output { stdout {codec=>rubydebug} }

input{
    tcp{
        port => 514
        type => syslog
    }
    
    udp{
        port => 514
        type => syslog
    }
}

filter{
    grok{
        #    match => [ "message", "%{SYSLOGBASE}" ]
        match => [ "message", "%{SYSLOGTIMESTAMP:timestamp} (?:%{SYSLOGFACILITY:facility} )?%{SYSLOGHOST:logsource} %{GREEDYDATA:reste}" ]
    }

    #suppression des informations pas interessantes pour firewall (TCP/UDP teadrdown)
    if "-302014:" in [reste] or "-302016:" in [reste]{
        drop{}
    }
    
    #eclatement pour firewall
    if "FWSM" in [reste]{
        grok{
            match => [ "reste", "%{PROG:program}: (?<operation>[a-z,A-Z, ]+) (?<numero>\d+) %{DATA} inside:%{IP:IPinside}/(?<portin>\d+) \(%{IP:IPnat}/(?<portnat>\d+)\) %{DATA} outside:%{IP:IPoutside}/(?<portout>\d+) %{DATA}" ]
        }
        mutate{
            add_field => {
                "firewall" => true
            }
            remove_field => ["reste", "timestamp"]
        }
        grok{
            match => [ "@timestamp", "%{TIMESTAMP_ISO8601:timestamp}"]
        }
    }
    #traitement log DNS, inexploité pour le moment
    #    else if "queries: info: client" in [reste]{
    #        grok{
    #       match => [ "reste", "(?<ipclient>%{IP})#([0-9]{1,5})\ +\((.*?)\).*?query:\ (?<url>.*?)\ (?<type>IN|HS|CH|ANY)\ (?<champ>.*?)\ (?<option>.*?)\ " ]
    #   }
    #   mutate{
    #           add_field => {"dns" => true}
    #       remove_field => ["reste"]
    #   }
    #    }

    else{
        #traitement des states
        grok{
            match => [ "reste", "(?<chiffre>\d+):\ (?<uptime>([1-9][0-9]?(d|w|y))([1-9][0-9]?(d|w|y))?:\ )?((?<datetest>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?) (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?)):\ )?(?<action>[\w._\/%-]+):\ %{GREEDYDATA:information}" ] # attention aux espaces 
        }
        
        #si ce n'est pas un state bien formé
        if "_grokparsefailure" in [tags]{
            #mise en throtle pour mail 
            throttle{
                before_count => 2
                after_count => 4
                period => 600
                key => "%{message}"
                #ajout du tag pour envoie d'email
                add_tag => "mail"
            }
        }
        mutate{
            add_field => {"firewall" => false}
            remove_field => ["reste"]
        }
    }
}

output{
    #envoie de firewall
    if [firewall]=="true"{
        redis {
            host => "100.127.255.1"
            data_type => "list"
            key => "firewall"
        }
    }   
        #non utilisé pour le moment
        #   else if [dns]=="true"{
        #       stdout{codec => rubydebug}  
        #   #   redis {
        #   #       host => "100.127.255.1"
        #   #       data_type => "list"
        #   #       key => "firewall"
        #   #   }
        #   }   
    #envoie de states
    else{
        redis {
            host => "100.127.255.1"
            data_type => "list"
            key => "state"
        }
    }
    #envoie de mail
    if "mail" in [tags]{
        email{
            to => "fdupont@localhost"
            from => "logstashfail@%{host}"
            subject => "%{@timestamp} _grokparsefailure"
            body => "Logstash n'a pas pu parser un log contenant :\n %{message}\n Ce meessage requiert votre attention, car il est souvent synonyme d'un probleme reseau quelconque"
        }
        
    }
}
